{"ast":null,"code":"var _jsxFileName = \"/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAdmin = stream => {\n      // if this stream belongs to the user that is currently logged in render buttons\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: `streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Link, {\n          to: `streams/delete/${stream.id}`,\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    };\n\n    this.renderList = () => {\n      return this.props.streams.map(stream => {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, this.renderAdmin(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: `/streams/${stream.id}`,\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, stream.title), React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, stream.description)));\n      });\n    };\n  }\n\n  // only want to fetch data one time so goes in componentDidMount\n  componentDidMount() {\n    this.props.fetchStreams();\n  } // helper method to render edit/delete buttons\n\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/new\",\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Create Stream\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.renderList()), this.renderCreate());\n  }\n\n} // data that is being made available to this component via react-redux msp\n\n\nconst mapStateToProps = state => {\n  return {\n    // streams are stored in object, so turn it into array so I can map over it. Object.values takes and object as an argument (state.streams), and turns all the values in the object into an array.\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n}; // dispatching the fetchStreams action creator\n\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","renderAdmin","stream","userId","props","currentUserId","id","renderList","streams","map","title","description","componentDidMount","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { fetchStreams } from \"../../actions\"\n\nclass StreamList extends React.Component {\n  // only want to fetch data one time so goes in componentDidMount\n  componentDidMount() {\n    this.props.fetchStreams()\n  }\n\n  // helper method to render edit/delete buttons\n  renderAdmin = stream => {\n    // if this stream belongs to the user that is currently logged in render buttons\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          {/* navigate to edit component using the stream id,styled as a button */}\n          <Link to={`streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          {/* navigate to delete component using the stream id, styled as a button */}\n          <Link\n            to={`streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      )\n    }\n  }\n\n  // helper method to render the list of streams\n  renderList = () => {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <Link to={`/streams/${stream.id}`} className=\"header\">\n              {stream.title}\n            </Link>\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: \"right\" }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    )\n  }\n}\n\n// data that is being made available to this component via react-redux msp\nconst mapStateToProps = state => {\n  return {\n    // streams are stored in object, so turn it into array so I can map over it. Object.values takes and object as an argument (state.streams), and turns all the values in the object into an array.\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n// dispatching the fetchStreams action creator\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)\n"]},"metadata":{},"sourceType":"module"}