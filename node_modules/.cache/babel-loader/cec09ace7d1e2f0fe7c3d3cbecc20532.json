{"ast":null,"code":"import _ from \"lodash\"; // import of types from action.types file\n\nimport { FETCH_STREAM, FETCH_STREAMS, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM } from \"../actions/types\";\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, \"id\")\n      };\n\n    case FETCH_STREAM:\n      // key interpolation - [action.payload.id]\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/reducers/streamReducer.js"],"names":["_","FETCH_STREAM","FETCH_STREAMS","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd,C,CAEA;;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,aALF,QAMO,kBANP;AAQA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,WAAGN,CAAC,CAACS,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACF,SAAKT,YAAL;AACE;AACA,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKP,aAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKN,WAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKL,aAAL;AACE,aAAOL,CAAC,CAACY,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACF;AACE,aAAOJ,KAAP;AAbJ;AAeD,CAhBD","sourcesContent":["import _ from \"lodash\"\n\n// import of types from action.types file\nimport {\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  CREATE_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from \"../actions/types\"\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload, \"id\") }\n    case FETCH_STREAM:\n      // key interpolation - [action.payload.id]\n      return { ...state, [action.payload.id]: action.payload }\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload }\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload }\n    case DELETE_STREAM:\n      return _.omit(state, action.payload)\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}