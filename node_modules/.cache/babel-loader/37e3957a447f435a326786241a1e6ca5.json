{"ast":null,"code":"var _jsxFileName = \"/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/GoogleAuth.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions/index\";\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSingedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\n    this.renderAuthButton = () => {\n      if (this.state.isSignedIn === null) {\n        return null;\n      } else if (this.state.isSignedIn === true) {\n        return React.createElement(\"button\", {\n          className: \"ui red google button \",\n          onClick: this.onSignOutClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), \"Sign Out\");\n      } else {\n        return React.createElement(\"button\", {\n          className: \"ui red google button \",\n          onClick: this.onSignInClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), \"Sign In with Google\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        clientId: \"784716658380-04ei9l3s5cf7qku6moa3o104gi63dms2.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderAuthButton(this.props.isSignedIn));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSingedIn","onAuthChange","isSignedIn","props","onSignInClick","auth","onSignOutClick","renderAuthButton","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","setState","get","listen","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD+B;;AAAA,SAmBvCC,YAnBuC,GAmBxBC,UAAU,IAAI;AAC3B,UAAIA,UAAJ,EAAgB;AACd,aAAKC,KAAL,CAAWR,MAAX;AACD,OAFD,MAEO;AACL,aAAKQ,KAAL,CAAWP,OAAX;AACD;AACF,KAzBsC;;AAAA,SA2BvCQ,aA3BuC,GA2BvB,MAAM;AACpB,WAAKC,IAAL,CAAUV,MAAV;AACD,KA7BsC;;AAAA,SA+BvCW,cA/BuC,GA+BtB,MAAM;AACrB,WAAKD,IAAL,CAAUT,OAAV;AACD,KAjCsC;;AAAA,SAmCvCW,gBAnCuC,GAmCpB,MAAM;AACvB,UAAI,KAAKR,KAAL,CAAWG,UAAX,KAA0B,IAA9B,EAAoC;AAClC,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,KAAKH,KAAL,CAAWG,UAAX,KAA0B,IAA9B,EAAoC;AACzC,eACE;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,OAAO,EAAE,KAAKI,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD,OAPM,MAOA;AACL,eACE;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,OAAO,EAAE,KAAKF,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,wBADF;AAMD;AACF,KArDsC;AAAA;;AAGvCI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,0EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKX,IAAL,GAAYI,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEjB,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBkB,GAArB;AAAd,SAAd;AACA,aAAKf,IAAL,CAAUH,UAAV,CAAqBmB,MAArB,CAA4B,KAAKpB,YAAjC;AACD,OAVH;AAWD,KAZD;AAaD;;AAsCDqB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKf,gBAAL,CAAsB,KAAKJ,KAAL,CAAWD,UAAjC,CAAN,CAAP;AACD;;AAzDsC;;AA4DzC,MAAMqB,eAAe,GAAGxB,KAAK,IAAI;AAC/B,SAAO;AACLG,IAAAA,UAAU,EAAEH,KAAK,CAACM,IAAN,CAAWH;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { signIn, signOut } from \"../actions/index\"\n\nclass GoogleAuth extends React.Component {\n  state = { isSingedIn: null }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"784716658380-04ei9l3s5cf7qku6moa3o104gi63dms2.apps.googleusercontent.com\",\n          scope: \"email\"\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance()\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() })\n          this.auth.isSignedIn.listen(this.onAuthChange)\n        })\n    })\n  }\n\n  onAuthChange = isSignedIn => {\n    if (isSignedIn) {\n      this.props.signIn()\n    } else {\n      this.props.signOut()\n    }\n  }\n\n  onSignInClick = () => {\n    this.auth.signIn()\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut()\n  }\n\n  renderAuthButton = () => {\n    if (this.state.isSignedIn === null) {\n      return null\n    } else if (this.state.isSignedIn === true) {\n      return (\n        <button className=\"ui red google button \" onClick={this.onSignOutClick}>\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      )\n    } else {\n      return (\n        <button className=\"ui red google button \" onClick={this.onSignInClick}>\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      )\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton(this.props.isSignedIn)}</div>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth)\n"]},"metadata":{},"sourceType":"module"}