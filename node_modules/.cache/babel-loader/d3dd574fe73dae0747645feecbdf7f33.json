{"ast":null,"code":"var _jsxFileName = \"/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { fetchStream } from \"../../actions/index\";\n\nclass StreamDelete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderContent = () => {\n      if (!this.props.stream) {\n        return \"Are you sure you want to delete this stream?\";\n      }\n\n      return `Are you sure you want to delete the stream with title: ${this.props.stream.title}?`;\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props)\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","StreamDelete","Component","renderContent","props","stream","title","componentDidMount","match","params","id","renderActions","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAezCC,aAfyC,GAezB,MAAM;AACpB,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACtB,eAAO,8CAAP;AACD;;AACD,aAAQ,0DAAyD,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,KAAM,GAAzF;AACD,KApBwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKH,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,WACE,0CACE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AASDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE,KAAKT,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKQ,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMZ,OAAO,CAACc,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AA/BwC;;AAkC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEX,IAAAA,MAAM,EAAEU,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeb,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,YAA1C,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Modal from \"../Modal\"\nimport history from \"../../history\"\nimport { fetchStream } from \"../../actions/index\"\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    // console.log(this.props)\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  renderActions() {\n    return (\n      <>\n        <button className=\"ui button negative\">Delete</button>\n        <button className=\"ui button\">Cancel</button>\n      </>\n    )\n  }\n\n  renderContent = () => {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream?\"\n    }\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}?`\n  }\n\n  render() {\n    return (\n      <Modal\n        title=\"Delete Stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDismiss={() => history.push(\"/\")}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream })(StreamDelete)\n"]},"metadata":{},"sourceType":"module"}