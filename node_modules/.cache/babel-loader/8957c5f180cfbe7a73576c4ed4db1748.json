{"ast":null,"code":"// imported types\nimport { SIGN_IN, SIGN_OUT } from \"../actions/types\"; // initial values for state object\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  // keep track of user through google auth, so app can keep track of user who created stream\n  userId: null\n}; // initial state object passed in\n\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    // create a new object,take all values out of state argument and put into new object, update isSignedIn state property to true\n    case SIGN_IN:\n      return { ...state,\n        isSignedIn: true,\n        userId: action.payload\n      };\n    // create a new object,take all values out of state argument and put into new object, update isSignedIn state property to false\n\n    case SIGN_OUT:\n      return { ...state,\n        isSignedIn: false,\n        userId: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/reducers/authReducer.js"],"names":["SIGN_IN","SIGN_OUT","INITIAL_STATE","isSignedIn","userId","state","action","type","payload"],"mappings":"AAAA;AACA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpB;AACAC,EAAAA,MAAM,EAAE;AAHY,CAAtB,C,CAMA;;AACA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKP,OAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,UAAU,EAAE,IAAxB;AAA8BC,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAA7C,OAAP;AACF;;AACA,SAAKP,QAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYF,QAAAA,UAAU,EAAE,KAAxB;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAP;;AACF;AACE,aAAOC,KAAP;AARJ;AAUD,CAXD","sourcesContent":["// imported types\nimport { SIGN_IN, SIGN_OUT } from \"../actions/types\"\n\n// initial values for state object\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  // keep track of user through google auth, so app can keep track of user who created stream\n  userId: null\n}\n\n// initial state object passed in\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    // create a new object,take all values out of state argument and put into new object, update isSignedIn state property to true\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload }\n    // create a new object,take all values out of state argument and put into new object, update isSignedIn state property to false\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}