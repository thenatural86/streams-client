{"ast":null,"code":"var _jsxFileName = \"/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/streams/StreamEdit.js\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // action creator imports\n\nimport { fetchStream, editStream } from \"../../actions/index\";\nimport StreamForm from \"./StreamForm\"; // props (history, location and match)passed down from react router dom Route tag\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props); // conditional check to avoid undefined error\n\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Edit a Stream\"), React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, \"title\", \"description\"),\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps)\n  // return a object that has a stream property\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n}; //\n\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","render","console","log","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,qBAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK5BC,UAAU,IAAI;AACvB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACD,KAPsC;AAAA;;AACvCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAMDE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB,EADO,CAEP;;AACA,QAAI,CAAC,KAAKA,KAAL,CAAWQ,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAElB,CAAC,CAACmB,IAAF,CAAO,KAAKT,KAAL,CAAWQ,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADjB;AAEE,MAAA,QAAQ,EAAE,KAAKV,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAxBsC;;AA2BzC,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA;AACA,SAAO;AACLJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADH,GAAP;AAGD,CAND,C,CAQA;;;AACA,eAAeX,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import _ from \"lodash\"\nimport React from \"react\"\nimport { connect } from \"react-redux\"\n// action creator imports\nimport { fetchStream, editStream } from \"../../actions/index\"\nimport StreamForm from \"./StreamForm\"\n\n// props (history, location and match)passed down from react router dom Route tag\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  onSubmit = formValues => {\n    this.props.editStream(this.props.match.params.id, formValues)\n  }\n\n  render() {\n    console.log(this.props)\n    // conditional check to avoid undefined error\n    if (!this.props.stream) {\n      return <div>Loading...</div>\n    }\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={_.pick(this.props.stream, \"title\", \"description\")}\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps)\n  // return a object that has a stream property\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  }\n}\n\n//\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit)\n"]},"metadata":{},"sourceType":"module"}