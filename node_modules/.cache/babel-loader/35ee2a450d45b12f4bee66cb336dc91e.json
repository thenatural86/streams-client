{"ast":null,"code":"import streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n  console.log(\"hello\");\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/philipsmalls/Development/modern-react-with-redux/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","console","log","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AAAEC,IAAAA,IAAI,EAAET,OAAR;AAAiBU,IAAAA,OAAO,EAAEF;AAA1B,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AAAEF,IAAAA,IAAI,EAAER;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AAC1D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAJ,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEK,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACsB,GAAR,CAAY,UAAZ,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEK,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAGC,EAAE,IAAI,MAAMT,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACsB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEK,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKV,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC9D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAAC0B,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAEK,QAAQ,CAACI;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAGH,EAAE,IAAI,MAAMT,QAAN,IAAkB;AAClD,QAAMf,OAAO,CAAC4B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEa;AAAhC,GAAD,CAAR;AACD,CAJM","sourcesContent":["import streams from \"../apis/streams\"\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from \"./types\"\n\nexport const signIn = userId => {\n  return { type: SIGN_IN, payload: userId }\n}\n\nexport const signOut = () => {\n  return { type: SIGN_OUT }\n}\n\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues)\n  console.log(\"hello\")\n  dispatch({ type: CREATE_STREAM, payload: response.data })\n}\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\")\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data })\n}\n\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`)\n\n  dispatch({ type: FETCH_STREAM, payload: response.data })\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues)\n\n  dispatch({ type: EDIT_STREAM, payload: response.data })\n}\n\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`)\n\n  dispatch({ type: DELETE_STREAM, payload: id })\n}\n"]},"metadata":{},"sourceType":"module"}